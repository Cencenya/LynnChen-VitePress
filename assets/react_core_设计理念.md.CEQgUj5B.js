import{_ as a,c as e,o as t,aa as i}from"./chunks/framework.CAVwB9kQ.js";const u=JSON.parse('{"title":"React 设计理念","description":"","frontmatter":{},"headers":[],"relativePath":"react/core/设计理念.md","filePath":"react/core/设计理念.md","lastUpdated":1716361326000}'),o={name:"react/core/设计理念.md"},r=i('<h1 id="react-设计理念" tabindex="-1">React 设计理念 <a class="header-anchor" href="#react-设计理念" aria-label="Permalink to &quot;React 设计理念&quot;">​</a></h1><p>什么是 react 认为好的代码？</p><p>React 代码中如何应用这些原则？</p><h2 id="设计原则" tabindex="-1">设计原则 <a class="header-anchor" href="#设计原则" aria-label="Permalink to &quot;设计原则&quot;">​</a></h2><ul><li>Separation of Concerms 关注分离</li><li>High Cohesion，Loose Coupling 高内聚低耦合</li><li>K.I.S.S.(Keep it Simple,Stupid)</li><li>Performance</li></ul><h3 id="abstraction" tabindex="-1">Abstraction <a class="header-anchor" href="#abstraction" aria-label="Permalink to &quot;Abstraction&quot;">​</a></h3><p>No abstraction &gt; Wrong abstraction</p><p>Only abstraction to solve bugs</p><p>Remove as much complexity as you add</p><h3 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h3><p>保证可组合性(compose)</p><p>composable Minimal API surface</p><p>Minimize application state and minimize side --effects</p><p>UI before API</p><p>Absorb the complexity</p><h3 id="naming" tabindex="-1">Naming <a class="header-anchor" href="#naming" aria-label="Permalink to &quot;Naming&quot;">​</a></h3><ul><li>Consistent 一致性</li><li>Intuitive 直觉易懂</li><li>尽量不缩写</li><li>尽量不要简写</li></ul>',17),n=[r];function c(l,s,p,d,h,m){return t(),e("div",null,n)}const b=a(o,[["render",c]]);export{u as __pageData,b as default};
